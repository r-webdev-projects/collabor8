- @comments.each do |comment|
  - comment.self_and_descendants.each do |c|
    .comment
      .comment__timeline
        .avatar = image_tag c.user.try(:gravatar_url)

      .comment__content
        .comment__author
          .name = c.user.try(:username)

        .comment__posted_on
          = time_ago_in_words(c.created_at)
          |  ago

        .comment__message
          = markdown(c.body)

        .comment__actions
          - if user_signed_in? && current_user.voted_for?(c)
            = link_to break_up_idea_comment_path(@idea, c), method: :break_up, class: 'heart' do
              = inline_svg "heart.svg", class: 'filled'
          - else
            = link_to heart_idea_comment_path(@idea, c), method: :heart, class: 'heart' do
              = inline_svg "heart.svg"

          - if user_signed_in? && !comment_by_current_user?(c)
            span.divider
            = link_to "Reply", "#", class: 'reply-to-comment', data: { comment: c.id }

          - if comment_by_current_user?(c)
            span.divider
            = link_to 'Delete Comment', idea_comment_path(@idea, c), :method => :delete

      - if user_signed_in? && !comment_by_current_user?(c)
        .comment__reply data-parent-comment="#{c.id}"
          = render 'comments/form', parent_id: c.id
